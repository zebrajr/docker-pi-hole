name: Build Image and Publish
on:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches:
      - development
  release:
    types: [published]


env:
  dockerhub: ${{ secrets.DOCKERHUB_NAMESPACE }}/pihole
  ghcr: ghcr.io/${{ github.repository_owner }}/pihole
  components_branch: ${{ startsWith(github.ref, 'refs/tags/') && 'master' || 'development' }}  

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/386, linux/arm/v6, linux/arm/v7, linux/arm64]
        alpine_version: [3.19]
        # RISCV is currently not working on GHA, and so FTL is unavailable for this platform.
        # include:
        #   - platform: linux/riscv64
        #     alpine_version: edge
          
    steps:
      - name: Prepare name for digest up/download
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout Repo
        if: github.event_name != 'schedule'
        uses: actions/checkout@v4

      - name: Checkout dev branch if scheduled
        if: github.event_name == 'schedule'
        uses: actions/checkout@v4
        with:
          ref: development

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.dockerhub }}
            ${{ env.ghcr }}            
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag

      - name: Login to DockerHub and GitHub Container Registry
        uses: ./.github/actions/login-repo
        with:
          docker_username: ${{ secrets.DOCKERHUB_USER }}
          docker_password: ${{ secrets.DOCKERHUB_PASS }}
          ghcr_username: ${{ github.repository_owner }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./src/
          platforms: ${{ matrix.platform }}
          build-args: |
            PIHOLE_DOCKER_TAG=${{ steps.meta.outputs.version }}
            alpine_version=${{ matrix.alpine_version }}            
            FTL_BRANCH=${{ env.components_branch }}
            CORE_BRANCH=${{ env.components_branch }}
            WEB_BRANCH=${{ env.components_branch }}            
            PADD_BRANCH=${{ env.components_branch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=${{ env.dockerhub }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digests
        run: |
          mkdir -p /tmp/digests
          digest_docker="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest_docker#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # Merge all the digests into a single file
  # If we would push immediately above, the individual runners would overwrite each other's images
  # https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  merge-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Repo
        if: github.event_name != 'schedule'
        uses: actions/checkout@v4

      - name: Checkout dev branch if scheduled
        if: github.event_name == 'schedule'
        uses: actions/checkout@v4
        with:
          ref: development

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.dockerhub }}
            ${{ env.ghcr }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag

      - name: Login to DockerHub and GitHub Container Registry
        uses: ./.github/actions/login-repo
        with:
          docker_username: ${{ secrets.DOCKERHUB_USER }}
          docker_password: ${{ secrets.DOCKERHUB_PASS }}
          ghcr_username: ${{ github.repository_owner }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push (DockerHub and GitHub Container Registry)
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.dockerhub }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.ghcr }}@sha256:%s ' *)

      - name: Inspect images
        run: |
          docker buildx imagetools inspect ${{ env.dockerhub }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.ghcr }}:${{ steps.meta.outputs.version }}